require 'rest-client'
require 'pg'
require 'rgeo/geo_json'
require 'json'

class MapController < ApplicationController
  def show_map
    # puts ("trace")
  end

  def insert_iso_shape
    conn = PGconn.open(
      :host => 'aws-gis.cot74qrzzmqu.us-west-2.rds.amazonaws.com',
      :port => 5432,
      :dbname => 'awsgis',
      :user => 'master',
      :password => 'mastermaster')

    # puts conn
    polygon = params[:polygon].to_json()
    newpolygon = polygon 
    puts "Start=========="
puts newpolygon
    puts "Stop==========="

    insertString = 'insert into user_polygons (name, geom) VALUES ($1, ST_SetSRID(ST_GeomFromGeoJSON($2), 4269))'

    polygon = "{\"type\":\"Polygon\",\"coordinates\":[[[-97.6722107,30.4388504],[-97.6667404,30.4476109],[-97.6667404,30.4476109],[-97.6669312,30.4555702],[-97.6669312,30.4555702],[-97.6662216,30.4590092],[-97.6662216,30.4590092],[-97.6683273,30.4732208],[-97.6683273,30.4732208],[-97.663063,30.4824104],[-97.663063,30.4824104],[-97.6563797,30.4952507],[-97.6563797,30.4952507],[-97.6484528,30.4917603],[-97.6484528,30.4917603],[-97.6357117,30.4890194],[-97.6357117,30.4890194],[-97.6306992,30.4885998],[-97.6306992,30.4885998],[-97.6281586,30.4882393],[-97.6281586,30.4882393],[-97.6147003,30.4944592],[-97.6147003,30.4944592],[-97.6133194,30.4984207],[-97.6133194,30.4984207],[-97.6041183,30.4914608],[-97.6041183,30.4914608],[-97.6036224,30.4897194],[-97.6036224,30.4897194],[-97.5983276,30.4770107],[-97.5983276,30.4770107],[-97.5858078,30.4820404],[-97.5858078,30.4820404],[-97.5844421,30.4938698],[-97.5844421,30.4938698],[-97.5841064,30.5004005],[-97.5841064,30.5004005],[-97.5765533,30.5065804],[-97.5765533,30.5065804],[-97.5755386,30.5231705],[-97.5755386,30.5231705],[-97.5756912,30.5279102],[-97.5756912,30.5279102],[-97.5755997,30.5290508],[-97.5755997,30.5290508],[-97.5754623,30.5218792],[-97.5754623,30.5218792],[-97.57547,30.5203991],[-97.57547,30.5203991],[-97.575798,30.5066204],[-97.575798,30.5066204],[-97.5721664,30.4914799],[-97.5721664,30.4914799],[-97.5599976,30.4816608],[-97.5599976,30.4816608],[-97.5737305,30.4781303],[-97.5737305,30.4781303],[-97.5747223,30.4629097],[-97.5747223,30.4629097],[-97.5735779,30.4480705],[-97.5735779,30.4480705],[-97.567337,30.4380798],[-97.567337,30.4380798],[-97.573822,30.4232807],[-97.573822,30.4232807],[-97.5748978,30.41642],[-97.5748978,30.41642],[-97.5809784,30.4012108],[-97.5809784,30.4012108],[-97.5797882,30.3944492],[-97.5797882,30.3944492],[-97.5831223,30.3724499],[-97.5831223,30.3724499],[-97.5848999,30.3644905],[-97.5848999,30.3644905],[-97.5854568,30.3633308],[-97.5854568,30.3633308],[-97.5869522,30.3610592],[-97.5869522,30.3610592],[-97.5879364,30.3941097],[-97.5879364,30.3941097],[-97.5958786,30.3935509],[-97.5958786,30.3935509],[-97.5950317,30.3948803],[-97.5950317,30.3948803],[-97.5945206,30.3956699],[-97.5945206,30.3956699],[-97.5916214,30.4119396],[-97.5916214,30.4119396],[-97.6053696,30.4099998],[-97.6053696,30.4099998],[-97.6076813,30.4088707],[-97.6076813,30.4088707],[-97.6089401,30.4105892],[-97.6089401,30.4105892],[-97.6250687,30.4107094],[-97.6250687,30.4107094],[-97.6257324,30.4097099],[-97.6257324,30.4097099],[-97.6270676,30.4076195],[-97.6270676,30.4076195],[-97.6287689,30.4009304],[-97.6287689,30.4009304],[-97.6252594,30.3906593],[-97.6252594,30.3906593],[-97.6261673,30.3910999],[-97.6261673,30.3910999],[-97.642662,30.3911304],[-97.642662,30.3911304],[-97.6487732,30.3867207],[-97.6487732,30.3867207],[-97.649147,30.3965607],[-97.649147,30.3965607],[-97.6495514,30.40802],[-97.6495514,30.40802],[-97.6541672,30.4140797],[-97.6541672,30.4140797],[-97.6610413,30.4193497],[-97.6610413,30.4193497],[-97.6571579,30.4289398],[-97.6571579,30.4289398],[-97.6616364,30.4396896],[-97.6616364,30.4396896],[-97.6722107,30.4388504]]]}"
            # "{\"type\":\"Polygon\",\"coordinates\":[[[-97.6722107,30.4388504],[-97.6667404,30.4476109],[-97.6667404,30.4476109],[-97.6669312,30.4555702],[-97.6669312,30.4555702],[-97.6662216,30.4590092],[-97.6662216,30.4590092],[-97.6683273,30.4732208],[-97.6683273,30.4732208],[-97.663063,30.4824104],[-97.663063,30.4824104],[-97.6563797,30.4952507],[-97.6563797,30.4952507],[-97.6484528,30.4917603],[-97.6484528,30.4917603],[-97.6357117,30.4890194],[-97.6357117,30.4890194],[-97.6306992,30.4885998],[-97.6306992,30.4885998],[-97.6281586,30.4882393],[-97.6281586,30.4882393],[-97.6147003,30.4944592],[-97.6147003,30.4944592],[-97.6133194,30.4984207],[-97.6133194,30.4984207],[-97.6041183,30.4914608],[-97.6041183,30.4914608],[-97.6036224,30.4897194],[-97.6036224,30.4897194],[-97.5983276,30.4770107],[-97.5983276,30.4770107],[-97.5858078,30.4820404],[-97.5858078,30.4820404],[-97.5844421,30.4938698],[-97.5844421,30.4938698],[-97.5841064,30.5004005],[-97.5841064,30.5004005],[-97.5765533,30.5065804],[-97.5765533,30.5065804],[-97.5755386,30.5231705],[-97.5755386,30.5231705],[-97.5756912,30.5279102],[-97.5756912,30.5279102],[-97.5755997,30.5290508],[-97.5755997,30.5290508],[-97.5754623,30.5218792],[-97.5754623,30.5218792],[-97.57547,30.5203991],[-97.57547,30.5203991],[-97.575798,30.5066204],[-97.575798,30.5066204],[-97.5721664,30.4914799],[-97.5721664,30.4914799],[-97.5599976,30.4816608],[-97.5599976,30.4816608],[-97.5737305,30.4781303],[-97.5737305,30.4781303],[-97.5747223,30.4629097],[-97.5747223,30.4629097],[-97.5735779,30.4480705],[-97.5735779,30.4480705],[-97.567337,30.4380798],[-97.567337,30.4380798],[-97.573822,30.4232807],[-97.573822,30.4232807],[-97.5748978,30.41642],[-97.5748978,30.41642],[-97.5809784,30.4012108],[-97.5809784,30.4012108],[-97.5797882,30.3944492],[-97.5797882,30.3944492],[-97.5831223,30.3724499],[-97.5831223,30.3724499],[-97.5848999,30.3644905],[-97.5848999,30.3644905],[-97.5854568,30.3633308],[-97.5854568,30.3633308],[-97.5869522,30.3610592],[-97.5869522,30.3610592],[-97.5879364,30.3941097],[-97.5879364,30.3941097],[-97.5958786,30.3935509],[-97.5958786,30.3935509],[-97.5950317,30.3948803],[-97.5950317,30.3948803],[-97.5945206,30.3956699],[-97.5945206,30.3956699],[-97.5916214,30.4119396],[-97.5916214,30.4119396],[-97.6053696,30.4099998],[-97.6053696,30.4099998],[-97.6076813,30.4088707],[-97.6076813,30.4088707],[-97.6089401,30.4105892],[-97.6089401,30.4105892],[-97.6250687,30.4107094],[-97.6250687,30.4107094],[-97.6257324,30.4097099],[-97.6257324,30.4097099],[-97.6270676,30.4076195],[-97.6270676,30.4076195],[-97.6287689,30.4009304],[-97.6287689,30.4009304],[-97.6252594,30.3906593],[-97.6252594,30.3906593],[-97.6261673,30.3910999],[-97.6261673,30.3910999],[-97.642662,30.3911304],[-97.642662,30.3911304],[-97.6487732,30.3867207],[-97.6487732,30.3867207],[-97.649147,30.3965607],[-97.649147,30.3965607],[-97.6495514,30.40802],[-97.6495514,30.40802],[-97.6541672,30.4140797],[-97.6541672,30.4140797],[-97.6610413,30.4193497],[-97.6610413,30.4193497],[-97.6571579,30.4289398],[-97.6571579,30.4289398],[-97.6616364,30.4396896],[-97.6616364,30.4396896],[-97.6722107,30.4388504]]]}"

    #polygon = "{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-97.6722107,30.4388504],[-97.6667404,30.4476109],[-97.6667404,30.4476109],[-97.6669312,30.4555702],[-97.6669312,30.4555702],[-97.6662216,30.4590092],[-97.6662216,30.4590092],[-97.6683273,30.4732208],[-97.6683273,30.4732208],[-97.663063,30.4824104],[-97.663063,30.4824104],[-97.6563797,30.4952507],[-97.6563797,30.4952507],[-97.6484528,30.4917603],[-97.6484528,30.4917603],[-97.6357117,30.4890194],[-97.6357117,30.4890194],[-97.6306992,30.4885998],[-97.6306992,30.4885998],[-97.6281586,30.4882393],[-97.6281586,30.4882393],[-97.6147003,30.4944592],[-97.6147003,30.4944592],[-97.6133194,30.4984207],[-97.6133194,30.4984207],[-97.6041183,30.4914608],[-97.6041183,30.4914608],[-97.6036224,30.4897194],[-97.6036224,30.4897194],[-97.5983276,30.4770107],[-97.5983276,30.4770107],[-97.5858078,30.4820404],[-97.5858078,30.4820404],[-97.5844421,30.4938698],[-97.5844421,30.4938698],[-97.5841064,30.5004005],[-97.5841064,30.5004005],[-97.5765533,30.5065804],[-97.5765533,30.5065804],[-97.5755386,30.5231705],[-97.5755386,30.5231705],[-97.5756912,30.5279102],[-97.5756912,30.5279102],[-97.5755997,30.5290508],[-97.5755997,30.5290508],[-97.5754623,30.5218792],[-97.5754623,30.5218792],[-97.57547,30.5203991],[-97.57547,30.5203991],[-97.575798,30.5066204],[-97.575798,30.5066204],[-97.5721664,30.4914799],[-97.5721664,30.4914799],[-97.5599976,30.4816608],[-97.5599976,30.4816608],[-97.5737305,30.4781303],[-97.5737305,30.4781303],[-97.5747223,30.4629097],[-97.5747223,30.4629097],[-97.5735779,30.4480705],[-97.5735779,30.4480705],[-97.567337,30.4380798],[-97.567337,30.4380798],[-97.573822,30.4232807],[-97.573822,30.4232807],[-97.5748978,30.41642],[-97.5748978,30.41642],[-97.5809784,30.4012108],[-97.5809784,30.4012108],[-97.5797882,30.3944492],[-97.5797882,30.3944492],[-97.5831223,30.3724499],[-97.5831223,30.3724499],[-97.5848999,30.3644905],[-97.5848999,30.3644905],[-97.5854568,30.3633308],[-97.5854568,30.3633308],[-97.5869522,30.3610592],[-97.5869522,30.3610592],[-97.5879364,30.3941097],[-97.5879364,30.3941097],[-97.5958786,30.3935509],[-97.5958786,30.3935509],[-97.5950317,30.3948803],[-97.5950317,30.3948803],[-97.5945206,30.3956699],[-97.5945206,30.3956699],[-97.5916214,30.4119396],[-97.5916214,30.4119396],[-97.6053696,30.4099998],[-97.6053696,30.4099998],[-97.6076813,30.4088707],[-97.6076813,30.4088707],[-97.6089401,30.4105892],[-97.6089401,30.4105892],[-97.6250687,30.4107094],[-97.6250687,30.4107094],[-97.6257324,30.4097099],[-97.6257324,30.4097099],[-97.6270676,30.4076195],[-97.6270676,30.4076195],[-97.6287689,30.4009304],[-97.6287689,30.4009304],[-97.6252594,30.3906593],[-97.6252594,30.3906593],[-97.6261673,30.3910999],[-97.6261673,30.3910999],[-97.642662,30.3911304],[-97.642662,30.3911304],[-97.6487732,30.3867207],[-97.6487732,30.3867207],[-97.649147,30.3965607],[-97.649147,30.3965607],[-97.6495514,30.40802],[-97.6495514,30.40802],[-97.6541672,30.4140797],[-97.6541672,30.4140797],[-97.6610413,30.4193497],[-97.6610413,30.4193497],[-97.6571579,30.4289398],[-97.6571579,30.4289398],[-97.6616364,30.4396896],[-97.6616364,30.4396896],[-97.6722107,30.4388504]]]}}"
newpolygon.slice! "{\\\"type\\\":\\\"Feature\\\",\\\"properties\\\":{},\\\"geometry\\\":"
newpolygon = newpolygon.sub("}}", "}")
#newpolygon.to_json

newpolygon = newpolygon.gsub("\\", "")
#newpolygon = newpolygon.gsub("\"", "\'")

puts "BEFORE INSERT=============="
# newpolygon = newpolygon.to_json
#newpolygon.chomp!
newpolygon.chop!

# newpolygon.chomp!
newpolygon[0] = ''

puts newpolygon
puts "X========================="
x = newpolygon
puts x
puts x.length
puts polygon.length
puts x[0]
puts "========================"

# puts polygon

    conn.query(insertString, ['Test Insert 10', newpolygon])
    render :json => {
      connection: 'DONE'
    }

    # "insert into user_polygons (name, geom) VALUES('Test Polygon 1', ST_SetSRID(ST_MakePolygon(ST_GeomFromText('LINESTRING(-97.73695 30.290746,-97.72974 30.310607,-97.711887 30.315349,-97.707081 30.299936,-97.718067 30.290153, -97.73695 30.290746
# )')),4269));"

  end

  def insert_iso

    puts params[:polygon]


      
      # :pool => 5,
      # :timeout => 5000)

    # conn.exec("insert into user_polygons (name, geom) VALUES('Test Polygon 1', ST_SetSRID(ST_MakePolygon(ST_GeomFromText('LINESTRING(-97.73695 30.290746,-97.72974 30.310607,-97.711887 30.315349,-97.707081 30.299936,-97.718067 30.290153, -97.73695 30.290746)')),4269));")
       

    render :json => {
      connection: 'success'
    }   

  end

  def starting_coordinates

    render :json => {
      latitude: 36,
      longitude: -97,
      zoom: 100,
      isGeoLocation: true
    }
    # puts("trace")

    # response = RestClient.get("http://freegeoip.net/json")
    # myData = JSON.parse(response)

    # if (myData.nil?) then
    #   # center of the U.S.
    #   latitude = 35.746512259918504
    #   longitude = -96.9873046875
    #   zoom = 4
    #   isGeoLocation = false
    # else
    #   # geo IP location
    #   latitude = myData['latitude']
    #   longitude = myData['longitude']
    #   zoom = 15
    #   isGeoLocation = true
    # end

    # render :json => {
    #   latitude: latitude,
    #   longitude: longitude,
    #   zoom: zoom,
    #   isGeoLocation: isGeoLocation
    # }


  end
end
